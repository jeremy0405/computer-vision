{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"20163330_장형석","provenance":[{"file_id":"1i1ooCK48gH6Mm8aUilBISfPVBO9vHgJD","timestamp":1623757482180},{"file_id":"1--VJV1IT4lc7nw6kBsxjaQolOqO-ZzcD","timestamp":1621217290767}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"1a7f9e48c9634341b745dfd3ff93aea1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_91958b5d6dd84cef8f80e7caff1b46a4","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_258f02ca10564b0790876411e5160796","IPY_MODEL_8f70c9ab90ae4fb58b5927cf4a853bdc"]}},"91958b5d6dd84cef8f80e7caff1b46a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"258f02ca10564b0790876411e5160796":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f7e0bebf34f943d8995522c618a752ae","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":46830571,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":46830571,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_025d54b983c04c7b840cd1c3ee842ef3"}},"8f70c9ab90ae4fb58b5927cf4a853bdc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_2586346b22614d49a7f2dd98e5606378","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 44.7M/44.7M [00:30&lt;00:00, 1.51MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d0bc46a54ecd4ad08e611427087af93c"}},"f7e0bebf34f943d8995522c618a752ae":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"025d54b983c04c7b840cd1c3ee842ef3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2586346b22614d49a7f2dd98e5606378":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d0bc46a54ecd4ad08e611427087af93c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"H6IbuPWObt91"},"source":["# Image Retrieval\n","\n","국민대학교 차량지능기초 SLAM 파트 과제 5\n","\n","- 학번 : 20163330\n","- 이름 : 장형석\n","\n","---\n","\n","- pre-train된 ResNet feature를 사용하여 주어진 이미지와 가장 유사한 이미지를 검색하는 실습을 진행한다.\n","\n","\n","\n","**참고**\n","- Colab에서 코드에 이상이 없음에도 불구하고 결과가 제대로 나오지 않을 경우, '런타임 다시 시작...'을 해보도록 한다.\n","\n","---\n","\n","**[중요] 과제 제출 방법**\n","- 과제 제출 기한은 2021년 6월 23일까지입니다.\n","- 과제는 Colab에서 작성한 것을 다운받아 (파일-.ipynb 다운로드) 가상 대학에 업로드합니다. (이외의 제출 방법은 인정하지 않음)\n","- 제출 시 파일 제목은 '학번_이름' 으로 저장합니다."]},{"cell_type":"markdown","metadata":{"id":"SGjPyd7ioR2f"},"source":["https://pytorch.org/docs/stable/torchvision/models.html\n"]},{"cell_type":"code","metadata":{"id":"fAmusER2oRHL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624190180921,"user_tz":-540,"elapsed":5208,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"8f61012b-af5e-4561-85bc-0c29cf9d87ef"},"source":["import sys\n","import numpy as np\n","import cv2 as cv\n","import matplotlib.pyplot as plt\n","\n","import torch\n","import torchvision.models as models\n","\n","\n","print('python', sys.version)\n","print('numpy', np.__version__)\n","print('opencv', cv.__version__)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["python 3.7.10 (default, May  3 2021, 02:48:31) \n","[GCC 7.5.0]\n","numpy 1.19.5\n","opencv 4.1.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3g94-fkkti9L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624190199137,"user_tz":-540,"elapsed":18221,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"d41fab46-a7a9-4e97-c6e7-bf03a4461fa4"},"source":["# mount\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o5Jxk0TQtsyl","executionInfo":{"status":"ok","timestamp":1624190199137,"user_tz":-540,"elapsed":3,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}}},"source":["ROOT = '/content/drive/My Drive/bow/'"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"U2AUEdaB6QP0"},"source":["## 이미지 불러오기"]},{"cell_type":"code","metadata":{"id":"fl3pyigUtygB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624190206050,"user_tz":-540,"elapsed":6915,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"ac188a2f-6ab5-4129-f6aa-5a4a538fc1bc"},"source":["import glob\n","\n","imgs = glob.glob(ROOT + 'bow/*.png')\n","imgs = [cv.imread(img) for img in imgs]\n","print(len(imgs))"],"execution_count":4,"outputs":[{"output_type":"stream","text":["30\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7CblK_K7u80i","colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1FkivYd1HS40LZE-pInepjUzfHs2L9SyD"},"executionInfo":{"status":"ok","timestamp":1624190210873,"user_tz":-540,"elapsed":4847,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"a8981504-a42d-42b3-a6c9-07b2d9632129"},"source":["plt.figure(figsize=(20,18))\n","for i, img in enumerate(imgs):\n","    plt.subplot(6,5,i+1)\n","    plt.imshow(img[:,:,::-1])\n","    plt.axis('off')\n","plt.show()"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"26zJ9st8FRo8"},"source":["## ResNet feature 를 사용한 Image Retrieval\n","\n","pre-train된 ResNet을 사용하여 주어진 이미지에 대해 가장 가까운 이미지를 찾는다. \n","\n","- [pytorch로 ResNet 가져오기](https://pytorch.org/docs/stable/torchvision/models.html)\n","\n","**과제**\n","\n","- pre-train된 ResNet으로 주어진 이미지들에 대한 feature를 구하시오."]},{"cell_type":"code","metadata":{"id":"Ec8V6OniPxV8","colab":{"base_uri":"https://localhost:8080/","height":141,"referenced_widgets":["1a7f9e48c9634341b745dfd3ff93aea1","91958b5d6dd84cef8f80e7caff1b46a4","258f02ca10564b0790876411e5160796","8f70c9ab90ae4fb58b5927cf4a853bdc","f7e0bebf34f943d8995522c618a752ae","025d54b983c04c7b840cd1c3ee842ef3","2586346b22614d49a7f2dd98e5606378","d0bc46a54ecd4ad08e611427087af93c"]},"executionInfo":{"status":"ok","timestamp":1624190239914,"user_tz":-540,"elapsed":29044,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"7cc3705b-6685-4f1a-c9f2-84d213dd6b74"},"source":["# to-do\n","resnet18 = models.resnet18(pretrained=True)\n","\n","img_tensor = torch.Tensor(imgs)\n","img_tensor = img_tensor.permute(0,3,1,2)\n","\n","feature = resnet18(img_tensor)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Downloading: \"https://download.pytorch.org/models/resnet18-f37072fd.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth\n"],"name":"stderr"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1a7f9e48c9634341b745dfd3ff93aea1","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=46830571.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)\n","  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"gW4DQ6PbowL9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624190239915,"user_tz":-540,"elapsed":9,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"b9004203-e003-4171-c375-05411f32d54b"},"source":["print('tensor size: ', img_tensor.shape)\n","print('feature size: ', feature.shape)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["tensor size:  torch.Size([30, 3, 480, 640])\n","feature size:  torch.Size([30, 1000])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UeiwSIWm-yEn"},"source":["**과제**\n","\n","- 추출한 feature들을 바탕으로 주어진 `queryIdx` 번째 이미지와 가장 유사한 이미지를 찾아 순서대로 보여주는 `display()`함수를 완성하고, 결과 그림에 대해 설명하시오."]},{"cell_type":"code","metadata":{"id":"gUIK5fcG7O3h","executionInfo":{"status":"ok","timestamp":1624190240528,"user_tz":-540,"elapsed":20,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}}},"source":["def display(queryIdx, features) :\n","\n","  # to-do : 추출한 feature들의 거리가 유사한 순서대로 보여주기\n","  initial_idx = []\n","\n","  for i in range(len(features)):\n","    E = pow(features[queryIdx]-features[i], 2)\n","    E = sum(E)\n","    initial_idx.append(E)\n","  \n","  initial_idx = np.array(initial_idx, dtype=np.float32)\n","  idxs = initial_idx.argsort()\n","\n","  plt.title('query image')\n","  plt.imshow(imgs[queryIdx][:,:,::-1])\n","  plt.show()\n","  \n","  plt.figure(figsize=(20,18))\n","  for i, idx in enumerate(idxs):\n","      plt.subplot(6,5,i+1)\n","      plt.imshow(imgs[idx][:,:,::-1])\n","      plt.axis('off')\n","  plt.show()\n","\n","  plt.figure(figsize=(16,2))\n","  plt.subplot(121)\n","  plt.title('query image')\n","  plt.bar(np.arange(1000), features[queryIdx])\n","\n","  plt.subplot(122)\n","  plt.title('1st closest image')\n","  plt.bar(np.arange(1000), features[idxs[1]])\n","  plt.show()\n","\n","  plt.figure(figsize=(16,2))\n","  plt.subplot(121)\n","  plt.title('query image')\n","  plt.bar(np.arange(1000), features[queryIdx])\n","\n","  plt.subplot(122)\n","  plt.title('10th closest image')\n","  plt.bar(np.arange(1000), features[idxs[10]])\n","  plt.show()\n","\n","  plt.figure(figsize=(16,2))\n","  plt.subplot(121)\n","  plt.title('query image')\n","  plt.bar(np.arange(1000), features[queryIdx])\n","\n","  plt.subplot(122)\n","  plt.title('29th closest image')\n","  plt.bar(np.arange(1000), features[idxs[29]])\n","  plt.show()"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eCL1mXrIHQXB"},"source":["결과 그림 설명\n","\n","resnet18 모델을 통과시킨 후 각 이미지의 feature 비교를 통해 imgs 에 저장되어 있는 30장의 이미지 중 18번째 이미지와 유사한 이미지를 순서대로 나타내었다. 또한 18번째 이미지의 feature와 18번째 이미지를 제외한 후 가장 유사하다고 판단되는 이미지의 feature (features[idxs[1]]) 를 출력하였고 이후 18번째 이미지를 제외한 후 10번째로 유사한 이미지의 feature, 29번째로 유사한 이미지의 feature를 원본 이미지인 18번째 이미지의 feature와 비교하는 plt.bar를 생성하였다. 1번째 유사한 이미지 feature와 29번째로 유사한 이미지 feature를 원본 이미지의 feature와 비교해보면 1번째로 유사한 feature는 원본 feature와 비슷한 반면 29번째 feature는 원본 feature와 다른 형상을 하고 있는 것을 확인할 수 있다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1sQtaPMuF5Cnrpl6rU6iZthGYmRwZ45Fd"},"id":"SOpTWAitviEF","executionInfo":{"status":"ok","timestamp":1624190254733,"user_tz":-540,"elapsed":14221,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"476433c8-cd0e-4c77-c0e0-97c74b7fce48"},"source":["display(17, feature.detach().numpy())"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"8KQYsLJ-IEvb"},"source":["**과제**\n","\n","- bag of word 기법을 설명하고, bag of word 기법으로 image retrieval을 진행했을 때와 위 방법으로 진행했을 때의 차이점을 서술하시오."]},{"cell_type":"markdown","metadata":{"id":"0ZAB6hrnHJXR"},"source":["# bag of word 란?\n","\n","bag of word 기법은 단어들의 출현 빈도에 집중하여 텍스트 데이터를 수치화하는 표현 방법이다. 문서를 자동으로 분류하기 위한 방법으로 생겨났으나 컴퓨터 비전에서도 이를 이용하여 이미지 분류(image categorization), 이미지 검색(image retrieval) 또는 물체나 씬을 인식하는 용도로 사용된다.\n","\n","# 분류 과정\n","\n","영상 분류를 위한 bag of word 기법은 다음의 5가지 과정을 거쳐 실행된다.\n","\n","1. Feature Extraction\n","\n","> 이미지들로부터 feature를 SIFT와 같은 기법으로 추출한다.\n","\n","2. Clustering\n","\n","> 추출된 feature들에 대해 클러스터링을 수행하여 클러스터 센터들인 codeword들을 찾아낸다. 클러스터링은 k-means clustering을 주로 사용한다.\n","\n","3. Codebook Generation\n","\n","> 찾아진 codeword들로 구성된 코드북을 생성한다. 코드북은 물체 클래스마다 생성하는 것이 아니라 공통적으로 하나만 생성하며 모든 클래스의 codeword들을 포함한다.\n","\n","4. Image Representation\n","\n","> 각각의 이미지들을 codeword들의 히스토그램을 표현한다. 이미지 하나당 하나의 히스토그램이 나오며 이 히스토그램의 크기는 코드북의 크기와 동일하다.\n","\n","5. Learning and Recognition\n","\n","> Bag of Word 기반의 학습 및 인식 방법은 크게 Bayesian 확률을 이용한 generative 방법과 SVM(support vector machine) 등의 분류기를 이용한 discriminative 방법이 있다. 첫번째 방법은 물체 클래스별 히스토그램 값을 확률로서 해석하여 물체를 분류하는 것이고 두번째 방법은 히스토그램 값을 feature vector로 해석하여 SVM등의 분류기에 넣고 클래스 경계를 학습시키는 방법이다.\n","\n","# bag of word 기법의 장단점\n","\n","장점\n","\n","> 영상의 카테고리를 분류하는 용도, 주어진 이미지와 유사한 영상을 찾는 용도 등으로 사용할 때 성공적으로 적용이 가능하다. 또한 씬 매칭 등을 할 때 가능성이 적은 후보 영상들을 걸러내는데 효과적으로 활용되고 있다.\n","\n","단점\n","\n","> feature들의 히스토그램으로 이미지를 표현하기 때문에 feature들 간의 기하학적인 위치 관계를 잃어버리는 문제점이 존재한다. 즉 동물 등과 같이 변형이 심한 물체를 인식하는데는 이 특성으로 인식률이 증가한다는 장점이 있지만 자동차와 같이 형태가 고정된 물체의 경우 성능저하의 큰 요인이 된다. 이와같은 단점을 보완하기 위한 방법으로 Spatial Pyramid Matching 방법이 있다.\n","\n","# Spatial Pyramid Maching\n","\n","이미지를 여러 단계의 resolution으로 분할 한 후 각단계의 분할 영역마다 bag of word를 통한 히스토그램을 구하여 이들을 전체적으로 비교하는 방법이다.\n","\n","# Beyond Sliding Windows: Efficient Subwindow Search(ESS)\n","\n","Sliding Window 기법은 영상에서 물체를 찾는데 가장 기본적으로 사용되는 기법이다. 윈도우를 일정한 간격으로 이동시키며 윈도우 내의 영상 영역이 찾고자 하는 물체인지 아닌지를 판단하는 방법이다. 모든 영상 위치 및 크기에 대해 물체의 존재 여부를 반복적으로 검사하는 방법이 일반적이다. 이러한 방법은 많은 연산량을 필요로 하므로 알고리즘의 속도를 느리게 하는 가장 큰 주범이다. ESS(Efficient Subwindow Search)는 반복 검사 없이 sliding window와 동일한 결과를 낼 수 있는 알고리즘이다. ESS는 탐색영역 R에 대한 평가함수 F가 존재하여 F(R)값이 큰 영역을 우선적으로 탐색하는 방법을 사용한다. 알고리즘의 과정 첫번째로 입력 영상 전체를 R로 놓고 F 값을 계산한다. 이후 탐색 영역을 둘로 분할한 후 각각에 대해 F값을 계산하여 F값이 최대인 영역을 선택하고 이를 다시 둘로 분할하여 과정을 더이상 쪼갤 수 없는 단위 윈도우가 나올때까지 반복한다.\n","\n","> 기존의 bag of word 방법은 물체의 존재 여부만을 확인할 뿐 물체의 위치는 알 수 없었다. 하지만 ESS 방법을 적용하면 빠르게 물체를 찾고 물체의 정확한 위치까지 파악이 가능하다. 따라서 ESS 방법을 통한 bag of word 기법을 사용하면 object localization 목적으로 적용이 가능해진다.\n","\n","> ESS기법은 image Retrieval에도 적용이 가능하다. 원본 이미지에 대해 생성한 feature 히스토그램을 비교할 이미지의 히스토그램과 비교하여 유사도의 최대값이 높은 이미지들을 선택하는 방법을 사용한다.\n","\n","\n","# 결론\n","\n","bag of word 기법은 동일 물체가 아니라 동일 카테고리의 물체를 식별하는데 적용될 수 있고 또한 시점 변화에 매우 강건한 특성을 갖고 있다. 하지만 feature들 간의 spatial 정보(기하학적 정보)를 잃어버린다는 단점이 존재한다."]},{"cell_type":"markdown","metadata":{"id":"sWDFx-VPIpc4"},"source":["## 추가 점수 과제\n","\n","- 주어진 views.txt 파일은 [meshroom](https://alicevision.org/)을 이용해 계산한 카메라의 위치 정보를 저장하고 있다. 이 파일과 위에서 수행한 것의 결과를 비교하시오.\n","\n","- 주어진 파일을 정답값(ground-truth)으로 삼아 위에서 수행한 image retrieval의 성능을 개선하시오.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"VIalVjviOzES"},"source":["# 주어진 views.txt 파일은 meshroom을 이용해 계산한 카메라의 위치 정보를 저장하고 있다. 이 파일과 위에서 수행한 것의 결과를 비교하시오.\n","\n","> views.txt 파일 내의 이미지 파일 정보와 bow 폴더 내의 이미지 파일이 다른 것이 많아 이미지를 출력하지는 못했습니다. views.txt 파일 내에 저장되어 있는 카메라 위치 정보를 기반으로 가까운 위치일수록 비슷한 이미지라고 생각하여 비슷한 이미지의 제목을 순서대로 나열하였습니다."]},{"cell_type":"code","metadata":{"id":"RkY-TD5jNYfV","executionInfo":{"status":"ok","timestamp":1624190255589,"user_tz":-540,"elapsed":858,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}}},"source":["f = open(ROOT + 'views.txt', 'r')\n","\n","image_name = []\n","x = []\n","y = []\n","z = []\n","\n","while True:\n","  line = f.readline()\n","  if not line: break\n","  image_name.append(line.split(' ')[0])\n","  x.append(float(line.split(\"'\")[1]))\n","  y.append(float(line.split(\"'\")[3]))\n","  z.append(float(line.split(\"'\")[5]))\n","f.close()"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"_oQZqOclSbox","executionInfo":{"status":"ok","timestamp":1624190255590,"user_tz":-540,"elapsed":6,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}}},"source":["def meshroom_display(queryIdx) :\n","\n","  initial_idx = []\n","  \n","  for i in range(len(x)):\n","    E1 = pow(x[queryIdx]-x[i], 2)\n","    E2 = pow(y[queryIdx]-y[i], 2)\n","    E3 = pow(z[queryIdx]-z[i], 2)\n","    E = E1 + E2 + E3\n","    initial_idx.append(E)\n","  \n","  initial_idx = np.array(initial_idx, dtype=np.float32)\n","  idxs = initial_idx.argsort()\n","  \n","  for i in range(len(idxs)):\n","    print(image_name[idxs[i]])\n"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6RuPpy0nTwok","executionInfo":{"status":"ok","timestamp":1624190255590,"user_tz":-540,"elapsed":4,"user":{"displayName":"‍장형석(학부생-자동차공학과)","photoUrl":"","userId":"02812597876504953792"}},"outputId":"b235e1b6-3f2c-435b-bda1-3587d1e1f7a0"},"source":["meshroom_display(0)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["DPP_0016.JPG\n","DPP_0017.JPG\n","DPP_0015.JPG\n","DPP_0014.JPG\n","DPP_0030.JPG\n","DPP_0031.JPG\n","DPP_0013.JPG\n","DPP_0034.JPG\n","DPP_0012.JPG\n","DPP_0036.JPG\n","DPP_0035.JPG\n","DPP_0037.JPG\n","DPP_0038.JPG\n","DPP_0039.JPG\n","DPP_0011.JPG\n","DPP_0040.JPG\n","DPP_0043.JPG\n","DPP_0010.JPG\n","DPP_0042.JPG\n","DPP_0041.JPG\n","DPP_0009.JPG\n","DPP_0008.JPG\n","DPP_0007.JPG\n","DPP_0006.JPG\n","DPP_0005.JPG\n","DPP_0004.JPG\n","DPP_0001.JPG\n","DPP_0003.JPG\n","DPP_0002.JPG\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ZJAzvbs4Pue8"},"source":["# 주어진 파일을 정답값(ground-truth)으로 삼아 위에서 수행한 image retrieval의 성능을 개선하시오.\n","\n","> 제 수준에서는 해결하지 못했습니다."]},{"cell_type":"markdown","metadata":{"id":"e_NTftr7QUa9"},"source":["# 참고자료\n","\n","- [다크 프로그래머 Bag of Words 기법](https://darkpgmr.tistory.com/125)"]}]}